version: "3.8"
services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "8888:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    networks:
      - n_core
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: "redis"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
    networks:
      - n_core
    volumes:
      - redis_data:/data

  mongodb:
    image: "mongo"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
    networks:
      - n_core
    volumes:
      - mongodb_data:/data/db

  downloader:
    image: "nil1729/yt-dl-fast-api"
    environment:
      - PORT=9090
    deploy:
      replicas: 4
      restart_policy:
        max_attempts: 3
        condition: on-failure
    healthcheck:
      test: curl -vvv 0.0.0.0:9090
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
    networks:
      - n_downloader
    volumes:
      - downloads_data:/usr/downloads

  downloader_lb:
    build:
      context: ./lb/downloader
      dockerfile: Dockerfile
    depends_on:
      downloader:
        condition: service_healthy
    restart: always
    networks:
      - n_core
      - n_downloader

  core:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./_local/docker.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      downloader_lb:
        condition: service_started
    deploy:
      replicas: 2
      restart_policy:
        max_attempts: 3
        condition: on-failure
    networks:
      - n_core
    volumes:
      - downloads_data:/tmp/m-dl/downloads
      - tmp_data:/opt/m-dl

  gateway:
    build:
      context: ./lb/core
      dockerfile: Dockerfile
    ports:
      - "9999:80"
    depends_on:
      core:
        condition: service_started
    restart: always
    networks:
      - n_core
      - n_gateway

networks:
  n_core:
  n_downloader:
  n_gateway:

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
  downloads_data:
  tmp_data:
